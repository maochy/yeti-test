\BOOKMARK [0][]{chapter*.1}{Contents}{}% 1
\BOOKMARK [0][]{chapter*.2}{List of Figures}{}% 2
\BOOKMARK [0][]{chapter*.3}{List of Tables}{}% 3
\BOOKMARK [0][]{chapter*.3}{Nomenclature}{}% 4
\BOOKMARK [0][]{chapter.1}{1 Introduction}{}% 5
\BOOKMARK [1][]{section.1.1}{1.1 Motivation}{chapter.1}% 6
\BOOKMARK [1][]{section.1.2}{1.2 The Problems}{chapter.1}% 7
\BOOKMARK [1][]{section.1.3}{1.3 Research Goals}{chapter.1}% 8
\BOOKMARK [1][]{section.1.4}{1.4 Contributions}{chapter.1}% 9
\BOOKMARK [2][]{subsection.1.4.1}{1.4.1 Dirt Spot Sweeping Random Strategy}{section.1.4}% 10
\BOOKMARK [2][]{subsection.1.4.2}{1.4.2 Automated Discovery of Failure Domain}{section.1.4}% 11
\BOOKMARK [2][]{subsection.1.4.3}{1.4.3 Invariant Guided Random+ Strategy}{section.1.4}% 12
\BOOKMARK [1][]{section.1.5}{1.5 Structure of the Thesis}{chapter.1}% 13
\BOOKMARK [0][]{chapter.2}{2 Literature Review}{}% 14
\BOOKMARK [1][]{section.2.1}{2.1 Software Testing}{chapter.2}% 15
\BOOKMARK [2][]{subsection.2.1.1}{2.1.1 Software Testing Levels}{section.2.1}% 16
\BOOKMARK [2][]{subsection.2.1.2}{2.1.2 Software Testing Purpose}{section.2.1}% 17
\BOOKMARK [2][]{subsection.2.1.3}{2.1.3 Software Testing Perspective}{section.2.1}% 18
\BOOKMARK [2][]{subsection.2.1.4}{2.1.4 Software Testing Execution}{section.2.1}% 19
\BOOKMARK [2][]{subsection.2.1.5}{2.1.5 Manual Testing}{section.2.1}% 20
\BOOKMARK [2][]{subsection.2.1.6}{2.1.6 Automated Testing}{section.2.1}% 21
\BOOKMARK [2][]{subsection.2.1.7}{2.1.7 Test Oracle}{section.2.1}% 22
\BOOKMARK [1][]{section.2.2}{2.2 Common Techniques of Software Testing}{chapter.2}% 23
\BOOKMARK [2][]{subsection.2.2.1}{2.2.1 Data Flow Analysis}{section.2.2}% 24
\BOOKMARK [2][]{subsection.2.2.2}{2.2.2 Control Flow Analysis}{section.2.2}% 25
\BOOKMARK [2][]{subsection.2.2.3}{2.2.3 Code based Fault Testing}{section.2.2}% 26
\BOOKMARK [2][]{subsection.2.2.4}{2.2.4 Use Case based Testing}{section.2.2}% 27
\BOOKMARK [2][]{subsection.2.2.5}{2.2.5 Partition Testing}{section.2.2}% 28
\BOOKMARK [2][]{subsection.2.2.6}{2.2.6 Boundary Value Analysis}{section.2.2}% 29
\BOOKMARK [2][]{subsection.2.2.7}{2.2.7 Formal Specification Testing}{section.2.2}% 30
\BOOKMARK [1][]{section.2.3}{2.3 Random Testing}{chapter.2}% 31
\BOOKMARK [1][]{section.2.4}{2.4 Various versions of random testing}{chapter.2}% 32
\BOOKMARK [2][]{subsection.2.4.1}{2.4.1 Adaptive Random Testing}{section.2.4}% 33
\BOOKMARK [2][]{subsection.2.4.2}{2.4.2 Mirror Adaptive Random Testing}{section.2.4}% 34
\BOOKMARK [2][]{subsection.2.4.3}{2.4.3 Restricted Random Testing}{section.2.4}% 35
\BOOKMARK [2][]{subsection.2.4.4}{2.4.4 Directed Automated Random Testing}{section.2.4}% 36
\BOOKMARK [2][]{subsection.2.4.5}{2.4.5 Quasi Random Testing}{section.2.4}% 37
\BOOKMARK [2][]{subsection.2.4.6}{2.4.6 Feedback-directed Random Testing}{section.2.4}% 38
\BOOKMARK [3][]{subsubsection.2.4.6.1}{2.4.6.1 Randoop: Feedback-directed Random Testing}{subsection.2.4.6}% 39
\BOOKMARK [2][]{subsection.2.4.7}{2.4.7 Object Distance and its application}{section.2.4}% 40
\BOOKMARK [3][]{subsubsection.2.4.7.1}{2.4.7.1 ARTOO Tool}{subsection.2.4.7}% 41
\BOOKMARK [3][]{subsubsection.2.4.7.2}{2.4.7.2 Experimental Assessment of RT for Object-Oriented Software}{subsection.2.4.7}% 42
\BOOKMARK [1][]{section.2.5}{2.5 Tools for Automated Random Testing}{chapter.2}% 43
\BOOKMARK [2][]{subsection.2.5.1}{2.5.1 JCrasher}{section.2.5}% 44
\BOOKMARK [2][]{subsection.2.5.2}{2.5.2 Jartege}{section.2.5}% 45
\BOOKMARK [2][]{subsection.2.5.3}{2.5.3 Eclat}{section.2.5}% 46
\BOOKMARK [2][]{subsection.2.5.4}{2.5.4 QuickCheck}{section.2.5}% 47
\BOOKMARK [2][]{subsection.2.5.5}{2.5.5 Autotost}{section.2.5}% 48
\BOOKMARK [2][]{subsection.2.5.6}{2.5.6 TestEra}{section.2.5}% 49
\BOOKMARK [2][]{subsection.2.5.7}{2.5.7 Korat}{section.2.5}% 50
\BOOKMARK [1][]{section.2.6}{2.6 YETI}{chapter.2}% 51
\BOOKMARK [2][]{subsection.2.6.1}{2.6.1 Construction of Test Cases}{section.2.6}% 52
\BOOKMARK [2][]{subsection.2.6.2}{2.6.2 Command-line Options}{section.2.6}% 53
\BOOKMARK [2][]{subsection.2.6.3}{2.6.3 YETI Execution}{section.2.6}% 54
\BOOKMARK [2][]{subsection.2.6.4}{2.6.4 YETI Report}{section.2.6}% 55
\BOOKMARK [2][]{subsection.2.6.5}{2.6.5 Summary of automated testing tools}{section.2.6}% 56
\BOOKMARK [1][]{section.2.7}{2.7 Conclusion}{chapter.2}% 57
\BOOKMARK [0][]{chapter.3}{3 Dirt Spot Sweeping Random Strategy}{}% 58
\BOOKMARK [1][]{section.3.1}{3.1 Introduction}{chapter.3}% 59
\BOOKMARK [1][]{section.3.2}{3.2 Dirt Spot Sweeping Random Strategy}{chapter.3}% 60
\BOOKMARK [2][]{subsection.3.2.1}{3.2.1 Random Strategy \(R\)}{section.3.2}% 61
\BOOKMARK [2][]{subsection.3.2.2}{3.2.2 Random Plus Strategy \(R+\)}{section.3.2}% 62
\BOOKMARK [2][]{subsection.3.2.3}{3.2.3 Dirt Spot Sweeping \(DSS\)}{section.3.2}% 63
\BOOKMARK [2][]{subsection.3.2.4}{3.2.4 Structure of the Dirt Spot Sweeping Random Strategy}{section.3.2}% 64
\BOOKMARK [2][]{subsection.3.2.5}{3.2.5 Explanation of DSSR strategy on a concrete example}{section.3.2}% 65
\BOOKMARK [1][]{section.3.3}{3.3 Implementation of the DSSR strategy}{chapter.3}% 66
\BOOKMARK [1][]{section.3.4}{3.4 Evaluation}{chapter.3}% 67
\BOOKMARK [2][]{subsection.3.4.1}{3.4.1 Research questions}{section.3.4}% 68
\BOOKMARK [2][]{subsection.3.4.2}{3.4.2 Experiments}{section.3.4}% 69
\BOOKMARK [2][]{subsection.3.4.3}{3.4.3 Performance measurement criteria}{section.3.4}% 70
\BOOKMARK [1][]{section.3.5}{3.5 Results}{chapter.3}% 71
\BOOKMARK [2][]{subsection.3.5.1}{3.5.1 Is there an absolute best among R, R+ and DSSR strategies?}{section.3.5}% 72
\BOOKMARK [2][]{subsection.3.5.2}{3.5.2 Are there classes for which any of the three strategies provide better results?}{section.3.5}% 73
\BOOKMARK [2][]{subsection.3.5.3}{3.5.3 Can we pick the best default strategy between R, R+ and DSSR?}{section.3.5}% 74
\BOOKMARK [1][]{section.3.6}{3.6 Discussion}{chapter.3}% 75
\BOOKMARK [1][]{section.3.7}{3.7 Related Work}{chapter.3}% 76
\BOOKMARK [1][]{section.3.8}{3.8 Conclusions}{chapter.3}% 77
\BOOKMARK [0][]{chapter.4}{4 Automated Disovery of Failure Domain}{}% 78
\BOOKMARK [1][]{section.4.1}{4.1 Introduction}{chapter.4}% 79
\BOOKMARK [1][]{section.4.2}{4.2 Automated Discovery of Failure Domain}{chapter.4}% 80
\BOOKMARK [1][]{section.4.3}{4.3 Implementation}{chapter.4}% 81
\BOOKMARK [2][]{subsection.4.3.1}{4.3.1 York Extensible Testing Infrastructure}{section.4.3}% 82
\BOOKMARK [2][]{subsection.4.3.2}{4.3.2 ADFD strategy in YETI}{section.4.3}% 83
\BOOKMARK [2][]{subsection.4.3.3}{4.3.3 Example}{section.4.3}% 84
\BOOKMARK [1][]{section.4.4}{4.4 Experimental Results}{chapter.4}% 85
\BOOKMARK [1][]{section.4.5}{4.5 Discussion}{chapter.4}% 86
\BOOKMARK [1][]{section.4.6}{4.6 Threats to Validity}{chapter.4}% 87
\BOOKMARK [1][]{section.4.7}{4.7 Related Works}{chapter.4}% 88
\BOOKMARK [1][]{section.4.8}{4.8 Conclusion}{chapter.4}% 89
\BOOKMARK [0][]{chapter.5}{5 Invariant Guided Random+ Strategy}{}% 90
\BOOKMARK [1][]{section.5.1}{5.1 Introduction}{chapter.5}% 91
\BOOKMARK [0][]{appendix*.4}{Appdx A}{}% 92
\BOOKMARK [0][]{appendix*.5}{Appdx B}{}% 93
\BOOKMARK [0][]{appendix*.6}{References}{}% 94
