\addvspace {10\p@ }
\contentsline {figure}{\numberline {1.1}{\ignorespaces Three main phases of random testing}}{3}{figure.1.1}
\contentsline {figure}{\numberline {1.2}{\ignorespaces Structure of thesis outline}}{8}{figure.1.2}
\addvspace {10\p@ }
\contentsline {figure}{\numberline {2.1}{\ignorespaces A simplified version of software testing process}}{10}{figure.2.1}
\contentsline {figure}{\numberline {2.2}{\ignorespaces Software testing from various view points}}{11}{figure.2.2}
\contentsline {figure}{\numberline {2.3}{\ignorespaces White-box testing}}{13}{figure.2.3}
\contentsline {figure}{\numberline {2.4}{\ignorespaces Black-box testing}}{14}{figure.2.4}
\contentsline {figure}{\numberline {2.5}{\ignorespaces Types of test data generator}}{19}{figure.2.5}
\contentsline {figure}{\numberline {2.6}{\ignorespaces Working mechanism of random testing}}{24}{figure.2.6}
\contentsline {figure}{\numberline {2.7}{\ignorespaces Failure domains across input domain\nobreakspace {}\cite {chan1996proportional}}}{26}{figure.2.7}
\contentsline {figure}{\numberline {2.8}{\ignorespaces Various versions of random testing}}{27}{figure.2.8}
\contentsline {figure}{\numberline {2.9}{\ignorespaces Simple mirror functions for mapping of test cases\nobreakspace {}\cite {chen2004mirror}}}{30}{figure.2.9}
\contentsline {subfigure}{\numberline {(a)}{\ignorespaces {Point domain}}}{30}{figure.2.9}
\contentsline {subfigure}{\numberline {(b)}{\ignorespaces {Block domain}}}{30}{figure.2.9}
\contentsline {subfigure}{\numberline {(c)}{\ignorespaces {Strip domain}}}{30}{figure.2.9}
\contentsline {figure}{\numberline {2.10}{\ignorespaces Input domain showing exclusion zones around selected test cases}}{31}{figure.2.10}
\contentsline {figure}{\numberline {2.11}{\ignorespaces How a class T can be checked for robustness with JCrasher. First, the JCrasher application generates a range of test cases for T and writes them to TTest.java. Second, the test cases can be executed with JUnit, and third, the JCrasher runtime filters exceptions according to the robustness heuristic\nobreakspace {}\cite {csallner2004jcrasher}. Denotes the Kleene star operator.}}{34}{figure.2.11}
\contentsline {figure}{\numberline {2.12}{\ignorespaces The input selection technique. Implicit in the diagram is the program under test. Rectangles with rounded corners represent steps in the technique, and rectangles with square corners represent artifacts\nobreakspace {}\cite {pacheco2005eclat}}}{36}{figure.2.12}
\contentsline {figure}{\numberline {2.13}{\ignorespaces AutoTest architecture\nobreakspace {}\cite {leitner2007reconciling}}}{38}{figure.2.13}
\contentsline {figure}{\numberline {2.14}{\ignorespaces The architecture of TestEra \nobreakspace {}\cite {marinov2001testera}}}{40}{figure.2.14}
\contentsline {figure}{\numberline {2.15}{\ignorespaces Types of software testing}}{41}{figure.2.15}
\contentsline {figure}{\numberline {2.16}{\ignorespaces Main features of automatic testing tools used in random testing}}{42}{figure.2.16}
\addvspace {10\p@ }
\contentsline {figure}{\numberline {3.1}{\ignorespaces Working process of YETI}}{43}{figure.3.1}
\contentsline {figure}{\numberline {3.2}{\ignorespaces Main packages of YETI with dependencies }}{44}{figure.3.2}
\contentsline {figure}{\numberline {3.3}{\ignorespaces Command to launch YETI from CLI}}{48}{figure.3.3}
\contentsline {figure}{\numberline {3.4}{\ignorespaces GUI launcher of YETI}}{49}{figure.3.4}
\contentsline {figure}{\numberline {3.5}{\ignorespaces Successful method calls of YETI}}{50}{figure.3.5}
\contentsline {figure}{\numberline {3.6}{\ignorespaces A sample of YETI bug report}}{50}{figure.3.6}
\contentsline {figure}{\numberline {3.7}{\ignorespaces GUI front-end of YETI}}{51}{figure.3.7}
\addvspace {10\p@ }
\contentsline {figure}{\numberline {4.1}{\ignorespaces Exploration of failures by DSS in block and strip domain}}{57}{figure.4.1}
\contentsline {figure}{\numberline {4.2}{\ignorespaces Working mechanism of DSSR Strategy}}{58}{figure.4.2}
\contentsline {figure}{\numberline {4.3}{\ignorespaces Test result of random strategy for the example code}}{61}{figure.4.3}
\contentsline {figure}{\numberline {4.4}{\ignorespaces Test result of DSSR strategy for the example code}}{61}{figure.4.4}
\contentsline {figure}{\numberline {4.5}{\ignorespaces Class Hierarchy of DSSR in YETI}}{63}{figure.4.5}
\contentsline {figure}{\numberline {4.6}{\ignorespaces Performance of DSSR in comparison with R and R+ strategies.}}{66}{figure.4.6}
\addvspace {10\p@ }
\contentsline {figure}{\numberline {5.1}{\ignorespaces Work flow of ADFD strategy}}{76}{figure.5.1}
\contentsline {figure}{\numberline {5.2}{\ignorespaces Front-end of ADFD strategy}}{77}{figure.5.2}
\contentsline {figure}{\numberline {5.3}{\ignorespaces ADFD strategy plotting pass and fail domain of the given class}}{81}{figure.5.3}
\contentsline {figure}{\numberline {5.4}{\ignorespaces Chart generated by ADFD strategy presenting point fault domain}}{83}{figure.5.4}
\contentsline {figure}{\numberline {5.5}{\ignorespaces Chart generated by ADFD strategy presenting block fault domain}}{84}{figure.5.5}
\contentsline {figure}{\numberline {5.6}{\ignorespaces Chart generated by ADFD strategy presenting Strip fault domain}}{85}{figure.5.6}
\addvspace {10\p@ }
\contentsline {figure}{\numberline {6.1}{\ignorespaces Workflow of ADFD+}}{92}{figure.6.1}
\contentsline {subfigure}{\numberline {(a)}{\ignorespaces {One dimension module}}}{92}{figure.6.1}
\contentsline {subfigure}{\numberline {(b)}{\ignorespaces {Two dimension module}}}{92}{figure.6.1}
\contentsline {subfigure}{\numberline {(a)}{\ignorespaces {One dimension module}}}{92}{figure.6.1}
\contentsline {subfigure}{\numberline {(b)}{\ignorespaces {Two dimension module}}}{92}{figure.6.1}
\contentsline {subfigure}{\numberline {(a)}{\ignorespaces {One dimension module}}}{92}{figure.6.1}
\contentsline {subfigure}{\numberline {(b)}{\ignorespaces {Two dimension module}}}{92}{figure.6.1}
\contentsline {figure}{\numberline {6.2}{\ignorespaces The output of ADFD+ for the above code.}}{93}{figure.6.2}
\contentsline {figure}{\numberline {6.3}{\ignorespaces Time taken to find failures}}{97}{figure.6.3}
\contentsline {figure}{\numberline {6.4}{\ignorespaces Number of test cases taken to find failures}}{97}{figure.6.4}
\contentsline {figure}{\numberline {6.5}{\ignorespaces Time taken to find failure domains}}{98}{figure.6.5}
\contentsline {figure}{\numberline {6.6}{\ignorespaces Test cases taken to find failure domains}}{99}{figure.6.6}
\contentsline {figure}{\numberline {6.7}{\ignorespaces Pass and fail values of plotted by ADFD+ in three different cases of two-dimension programs}}{104}{figure.6.7}
\contentsline {subfigure}{\numberline {(a)}{\ignorespaces {Point failure domain in one-dimension}}}{104}{figure.6.7}
\contentsline {subfigure}{\numberline {(b)}{\ignorespaces {Block failure domain in one-dimension}}}{104}{figure.6.7}
\contentsline {subfigure}{\numberline {(c)}{\ignorespaces {Strip failure domain in one dimension}}}{104}{figure.6.7}
\contentsline {figure}{\numberline {6.8}{\ignorespaces Pass and fail values of plotted by ADFD+ in three different cases of two-dimension programs}}{105}{figure.6.8}
\contentsline {subfigure}{\numberline {(a)}{\ignorespaces {Point failure domain in two-dimension}}}{105}{figure.6.8}
\contentsline {subfigure}{\numberline {(b)}{\ignorespaces {Block failure domain in two-dimension}}}{105}{figure.6.8}
\contentsline {subfigure}{\numberline {(c)}{\ignorespaces {Strip failure domain in two-dimension}}}{105}{figure.6.8}
\addvspace {10\p@ }
\addvspace {10\p@ }
\addvspace {10\p@ }
