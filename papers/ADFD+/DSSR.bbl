\begin{thebibliography}{10}

\bibitem{Arcuri2012}
A.~Arcuri, M.~Z. Iqbal, and L.~Briand.
\newblock Random testing: Theoretical results and practical implications.
\newblock {\em IEEE Transactions on Software Engineering}, 38:258--277, 2012.

\bibitem{Beizer1990}
B.~Beizer.
\newblock {\em Software testing techniques (2nd ed.)}.
\newblock Van Nostrand Reinhold Co., New York, NY, USA, 1990.

\bibitem{Chan1996}
F.~Chan, T.~Chen, I.~Mak, and Y.~Yu.
\newblock Proportional sampling strategy: guidelines for software testing
  practitioners.
\newblock {\em Information and Software Technology}, 38(12):775 -- 782, 1996.

\bibitem{Chan2002}
K.~P. Chan, T.~Y. Chen, and D.~Towey.
\newblock Restricted random testing.
\newblock In {\em Proceedings of the 7th International Conference on Software
  Quality}, ECSQ '02, pages 321--330, London, UK, UK, 2002. Springer-Verlag.

\bibitem{Chen2004a}
T.~Chen, R.~Merkel, P.~Wong, and G.~Eddy.
\newblock Adaptive random testing through dynamic partitioning.
\newblock In {\em Quality Software, 2004. QSIC 2004. Proceedings. Fourth
  International Conference on}, pages 79 -- 86, sept. 2004.

\bibitem{Chen1996}
T.~Chen and Y.~Yu.
\newblock On the expected number of failures detected by subdomain testing and
  random testing.
\newblock {\em Software Engineering, IEEE Transactions on}, 22(2):109 --119,
  feb 1996.

\bibitem{Chen2008}
T.~Y. Chen.
\newblock Adaptive random testing.
\newblock {\em Eighth International Conference on Qualify Software}, 0:443,
  2008.

\bibitem{Chen2004}
T.~Y. Chen, F.-C. Kuo, and R.~Merkel.
\newblock On the statistical properties of the f-measure.
\newblock In {\em Quality Software, 2004. QSIC 2004. Proceedings. Fourth
  International Conference on}, pages 146 -- 153, sept. 2004.

\bibitem{Chen2003}
T.~Y. Chen, F.~C. Kuo, R.~G. Merkel, and S.~P. Ng.
\newblock Mirror adaptive random testing.
\newblock In {\em Proceedings of the Third International Conference on Quality
  Software}, QSIC '03, page~4, Washington, DC, USA, 2003. IEEE Computer
  Society.

\bibitem{Chen2010}
T.~Y. Chen, F.-C. Kuo, R.~G. Merkel, and T.~H. Tse.
\newblock Adaptive random testing: The art of test case diversity.
\newblock {\em J. Syst. Softw.}, 83:60--66, January 2010.

\bibitem{Chen2005}
T.~Y. Chen and R.~Merkel.
\newblock Quasi-random testing.
\newblock In {\em Proceedings of the 20th IEEE/ACM international Conference on
  Automated software engineering}, ASE '05, pages 309--312, New York, NY, USA,
  2005. ACM.

\bibitem{Ciupa2007}
I.~Ciupa, A.~Leitner, M.~Oriol, and B.~Meyer.
\newblock Experimental assessment of random testing for object-oriented
  software.
\newblock In {\em Proceedings of the 2007 international symposium on Software
  testing and analysis}, ISSTA '07, pages 84--94, New York, NY, USA, 2007. ACM.

\bibitem{Ciupa2008a}
I.~Ciupa, A.~Leitner, M.~Oriol, and B.~Meyer.
\newblock Artoo: adaptive random testing for object-oriented software.
\newblock In {\em Proceedings of the 30th international conference on Software
  engineering}, ICSE '08, pages 71--80, New York, NY, USA, 2008. ACM.

\bibitem{Ciupa2008}
I.~Ciupa, B.~Meyer, M.~Oriol, and A.~Pretschner.
\newblock Finding faults: Manual testing vs. random+ testing vs. user reports.
\newblock In {\em Proceedings of the 2008 19th International Symposium on
  Software Reliability Engineering}, pages 157--166, Washington, DC, USA, 2008.
  IEEE Computer Society.

\bibitem{Ciupa2008b}
I.~Ciupa, A.~Pretschner, A.~Leitner, M.~Oriol, and B.~Meyer.
\newblock On the predictability of random tests for object-oriented software.
\newblock In {\em Proceedings of the 2008 International Conference on Software
  Testing, Verification, and Validation}, pages 72--81, Washington, DC, USA,
  2008. IEEE Computer Society.

\bibitem{Ciupa2009}
I.~Ciupa, A.~Pretschner, M.~Oriol, A.~Leitner, and B.~Meyer.
\newblock On the number and nature of faults found by random testing.
\newblock {\em Software Testing Verification and Reliability}, 9999(9999):1--7,
  2009.

\bibitem{Claessen2000}
K.~Claessen and J.~Hughes.
\newblock Quickcheck: a lightweight tool for random testing of haskell
  programs.
\newblock In {\em Proceedings of the fifth ACM SIGPLAN international conference
  on Functional programming}, ICFP '00, pages 268--279, New York, NY, USA,
  2000. ACM.

\bibitem{Claessen2000a}
K.~Claessen and J.~Hughes.
\newblock Quickcheck: a lightweight tool for random testing of haskell
  programs.
\newblock {\em SIGPLAN Not.}, 35(9):268--279, Sept. 2000.

\bibitem{Csallner2004}
C.~Csallner and Y.~Smaragdakis.
\newblock Jcrasher: An automatic robustness tester for {Java}.
\newblock {\em Software---Practice \& Experience}, 34(11):1025--1050, Sept.
  2004.

\bibitem{Duran1981}
J.~W. Duran and S.~Ntafos.
\newblock A report on random testing.
\newblock In {\em Proceedings of the 5th international conference on Software
  engineering}, ICSE '81, pages 179--183, Piscataway, NJ, USA, 1981. IEEE
  Press.

\bibitem{Duran1984}
J.~W. Duran and S.~C. Ntafos.
\newblock An evaluation of random testing.
\newblock {\em Software Engineering, IEEE Transactions on}, SE-10(4):438 --444,
  july 1984.

\bibitem{Gutjahr1999}
W.~Gutjahr.
\newblock Partition testing vs. random testing: the influence of uncertainty.
\newblock {\em Software Engineering, IEEE Transactions on}, 25(5):661 --674,
  sep/oct 1999.

\bibitem{Hamlet1990}
D.~Hamlet and R.~Taylor.
\newblock Partition testing does not inspire confidence [program testing].
\newblock {\em Software Engineering, IEEE Transactions on}, 16(12):1402 --1411,
  dec 1990.

\bibitem{Hamlet1994}
R.~Hamlet.
\newblock Random testing.
\newblock In {\em Encyclopedia of Software Engineering}, pages 970--978. Wiley,
  1994.

\bibitem{Leitner2007}
A.~Leitner, I.~Ciupa, B.~Meyer, and M.~Howard.
\newblock Reconciling manual and automated testing: The autotest experience.
\newblock In {\em Proceedings of the 40th Annual Hawaii International
  Conference on System Sciences}, HICSS '07, pages 261a--, Washington, DC, USA,
  2007. IEEE Computer Society.

\bibitem{Leitner2009}
A.~Leitner, A.~Pretschner, S.~Mori, B.~Meyer, and M.~Oriol.
\newblock On the effectiveness of test extraction without overhead.
\newblock In {\em Proceedings of the 2009 International Conference on Software
  Testing Verification and Validation}, pages 416--425, Washington, DC, USA,
  2009. IEEE Computer Society.

\bibitem{Liu2012}
H.~Liu, F.-C. Kuo, and T.~Y. Chen.
\newblock Comparison of adaptive random testing and random testing under
  various testing and debugging scenarios.
\newblock {\em Software: Practice and Experience}, 42(8):1055--1074, 2012.

\bibitem{Myers2004}
G.~J. Myers and C.~Sandler.
\newblock {\em The Art of Software Testing}.
\newblock John Wiley \& Sons, 2004.

\bibitem{Ntafos2001}
S.~C. Ntafos.
\newblock On comparisons of random, partition, and proportional partition
  testing.
\newblock {\em IEEE Trans. Softw. Eng.}, 27:949--960, October 2001.

\bibitem{Oriat2004}
C.~Oriat.
\newblock Jartege: a tool for random generation of unit tests for java classes.
\newblock {\em CoRR}, abs/cs/0412012, 2004.

\bibitem{Oriol2011}
M.~Oriol.
\newblock York extensible testing infrastructure, 2011.

\bibitem{Oriol2012}
M.~Oriol.
\newblock Random testing: Evaluation of a law describing the number of faults
  found.
\newblock In {\em Software Testing, Verification and Validation (ICST), 2012
  IEEE Fifth International Conference on}, pages 201 --210, april 2012.

\bibitem{Oriol2010a}
M.~Oriol and S.~Tassis.
\newblock Testing .net code with yeti.
\newblock In {\em Proceedings of the 2010 15th IEEE International Conference on
  Engineering of Complex Computer Systems}, ICECCS '10, pages 264--265,
  Washington, DC, USA, 2010. IEEE Computer Society.

\bibitem{Oriol2010}
M.~Oriol and F.~Ullah.
\newblock Yeti on the cloud.
\newblock {\em Software Testing Verification and Validation Workshop, IEEE
  International Conference on}, 0:434--437, 2010.

\bibitem{Pacheco2005}
C.~Pacheco and M.~D. Ernst.
\newblock Eclat: Automatic generation and classification of test inputs.
\newblock In {\em In 19th European Conference Object-Oriented Programming},
  pages 504--527, 2005.

\bibitem{Pacheco2007}
C.~Pacheco and M.~D. Ernst.
\newblock {Randoop:} feedback-directed random testing for {Java}.
\newblock In {\em OOPSLA 2007 Companion, Montreal, Canada}. ACM, Oct. 2007.

\bibitem{Pacheco2007a}
C.~Pacheco, S.~K. Lahiri, M.~D. Ernst, and T.~Ball.
\newblock Feedback-directed random test generation.
\newblock In {\em Proceedings of the 29th international conference on Software
  Engineering}, ICSE '07, pages 75--84, Washington, DC, USA, 2007. IEEE
  Computer Society.

\bibitem{Tempero2008}
E.~Tempero.
\newblock An empirical study of unused design decisions in open source java
  software.
\newblock In {\em Software Engineering Conference, 2008. APSEC '08. 15th
  Asia-Pacific}, pages 33 --40, dec. 2008.

\bibitem{Tempero2010}
E.~Tempero, C.~Anslow, J.~Dietrich, T.~Han, J.~Li, M.~Lumpe, H.~Melton, and
  J.~Noble.
\newblock Qualitas corpus: A curated collection of java code for empirical
  studies.
\newblock In {\em 2010 Asia Pacific Software Engineering Conference
  (APSEC2010)}, Dec. 2010.

\bibitem{Tempero2010a}
E.~Tempero, S.~Counsell, and J.~Noble.
\newblock An empirical study of overriding in open source java.
\newblock In {\em Proceedings of the Thirty-Third Australasian Conferenc on
  Computer Science - Volume 102}, ACSC '10, pages 3--12, Darlinghurst,
  Australia, Australia, 2010. Australian Computer Society, Inc.

\bibitem{Yoo2012}
S.~Yoo and M.~Harman.
\newblock Test data regeneration: generating new test data from existing test
  data.
\newblock {\em Softw. Test. Verif. Reliab.}, 22(3):171--201, May 2012.

\end{thebibliography}
