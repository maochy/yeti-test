\begin{thebibliography}{10}

\bibitem{chan1996proportional}
Chan, F., Chen, T.Y., Mak, I., Yu, Y.T.:
\newblock Proportional sampling strategy: guidelines for software testing
  practitioners.
\newblock Information and Software Technology \textbf{38}(12) (1996)  775--782

\bibitem{Chen2008}
Chen, T.Y.:
\newblock Adaptive random testing.
\newblock Eighth International Conference on Qualify Software \textbf{0} (2008)
   443

\bibitem{Beizer1990}
Beizer, B.:
\newblock Software testing techniques (2nd ed.).
\newblock Van Nostrand Reinhold Co., New York, NY, USA (1990)

\bibitem{pacheco2008finding}
Pacheco, C., Lahiri, S.K., Ball, T.:
\newblock Finding errors in. net with feedback-directed random testing.
\newblock In: Proceedings of the 2008 international symposium on Software
  testing and analysis, ACM (2008)  87--96

\bibitem{ahmad2013adfd}
Ahmad, M.A., Oriol, M.:
\newblock Automated discovery of failure domain.
\newblock Lecture Notes on Software Engineering \textbf{02}(4) (2014)  331--336

\bibitem{ahmad2014adfd2}
Ahmad, M.A., Oriol, M.:
\newblock Automated discovery of failure domain.
\newblock Lecture Notes on Software Engineering \textbf{03}(1) (2013)  289--294

\bibitem{Oriol2011yeti}
Oriol, M.:
\newblock York extensible testing infrastructure (2011)

\bibitem{ernst2007daikon}
Ernst, M.D., Perkins, J.H., Guo, P.J., McCamant, S., Pacheco, C., Tschantz,
  M.S., Xiao, C.:
\newblock The daikon system for dynamic detection of likely invariants.
\newblock Science of Computer Programming \textbf{69}(1) (2007)  35--45

\bibitem{gilbert2008jfreechart}
Gilbert, D.:
\newblock The jfreechart class library version 1.0. 9.
\newblock (2008)

\bibitem{oriol2012random}
Oriol, M.:
\newblock Random testing: Evaluation of a law describing the number of faults
  found.
\newblock In: Software Testing, Verification and Validation (ICST), 2012 IEEE
  Fifth International Conference on, IEEE (2012)  201--210

\bibitem{white1980domain}
White, L.J., Cohen, E.I.:
\newblock A domain strategy for computer program testing.
\newblock Software Engineering, IEEE Transactions on (3) (1980)  247--257

\bibitem{finelli1991nasa}
Finelli, G.B.:
\newblock Nasa software failure characterization experiments.
\newblock Reliability Engineering \& System Safety \textbf{32}(1) (1991)
  155--169

\bibitem{bishop1993variation}
Bishop, P.G.:
\newblock The variation of software survival time for different operational
  input profiles (or why you can wait a long time for a big bug to fail).
\newblock In: Fault-Tolerant Computing, 1993. FTCS-23. Digest of Papers., The
  Twenty-Third International Symposium on, IEEE (1993)  98--107

\bibitem{forrester2000empirical}
Forrester, J.E., Miller, B.P.:
\newblock An empirical study of the robustness of {W}indows {NT} applications
  using random testing.
\newblock In: Proceedings of the 4th USENIX Windows System Symposium. (2000)
  59--68

\bibitem{claessen2011quickcheck}
Claessen, K., Hughes, J.:
\newblock Quickcheck: a lightweight tool for random testing of haskell
  programs.
\newblock Acm sigplan notices \textbf{46}(4) (2011)  53--64

\bibitem{miller2006empirical}
Miller, B.P., Cooksey, G., Moore, F.:
\newblock An empirical study of the robustness of macos applications using
  random testing.
\newblock In: Proceedings of the 1st international workshop on Random testing,
  ACM (2006)  46--54

\bibitem{csallner2004jcrasher}
Csallner, C., Smaragdakis, Y.:
\newblock J{C}rasher: an automatic robustness tester for {J}ava.
\newblock Software: Practice and Experience \textbf{34}(11) (2004)  1025--1050

\bibitem{pacheco2005eclat}
Pacheco, C., Ernst, M.D.:
\newblock Eclat: Automatic generation and classification of test inputs.
\newblock Springer (2005)

\bibitem{ciupa2008predictability}
Ciupa, I., Pretschner, A., Leitner, A., Oriol, M., Meyer, B.:
\newblock On the predictability of random tests for object-oriented software.
\newblock In: Software Testing, Verification, and Validation, 2008 1st
  International Conference on, IEEE (2008)  72--81

\bibitem{oriat2005jartege}
Oriat, C.:
\newblock Jartege: a tool for random generation of unit tests for java classes.
\newblock In: Quality of Software Architectures and Software Quality.
\newblock Springer (2005)  242--256

\bibitem{pacheco2007randoop}
Pacheco, C., Ernst, M.D.:
\newblock Randoop: feedback-directed random testing for java.
\newblock In: Companion to the 22nd ACM SIGPLAN conference on Object-oriented
  programming systems and applications companion, ACM (2007)  815--816

\bibitem{oriol2010testing}
Oriol, M., Tassis, S.:
\newblock Testing {.NET} code with {YETI}.
\newblock In: Engineering of Complex Computer Systems (ICECCS), 2010 15th IEEE
  International Conference on, IEEE (2010)  264--265

\bibitem{Duran1984}
Duran, J.W., Ntafos, S.C.:
\newblock An evaluation of random testing.
\newblock Software Engineering, IEEE Transactions on \textbf{SE-10}(4) (july
  1984)  438 --444

\bibitem{Gutjahr1999}
Gutjahr, W.:
\newblock Partition testing vs. random testing: the influence of uncertainty.
\newblock Software Engineering, IEEE Transactions on \textbf{25}(5) (sep/oct
  1999)  661 --674

\bibitem{Arcuri2012}
Arcuri, A., Iqbal, M.Z., Briand, L.:
\newblock Random testing: Theoretical results and practical implications.
\newblock IEEE Transactions on Software Engineering \textbf{38} (2012)
  258--277

\end{thebibliography}
